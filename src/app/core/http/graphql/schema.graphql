# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

"An object with an ID"
interface Node {
    "The ID of the object."
    id: ID!
}

type AccountType implements Node {
    classNotifications: Boolean!
    dateJoined: DateTime!
    email: String!
    exemptFromPayment: Boolean!
    firstName: String
    homeworkNotifications: Boolean!
    "The ID of the object."
    id: ID!
    isActive: Boolean!
    isAdmin: Boolean!
    isStaff: Boolean!
    isSuperuser: Boolean!
    lastLogin: DateTime!
    lastName: String
    school: String
    sendScheduledEmails: Boolean!
    showScheduleOnCalendar: Boolean!
    timezone: AccountTimezone
    uid: UUID
    username: String!
}

type AccountTypeConnection {
    "Contains the nodes in this connection."
    edges: [AccountTypeEdge]!
    "Pagination data for this connection."
    pageInfo: PageInfo!
}

"A Relay edge containing a `AccountType` and its cursor."
type AccountTypeEdge {
    "A cursor for use in pagination"
    cursor: String!
    "The item at the end of the edge"
    node: AccountType
}

type AddCourseFileMutationPayload {
    clientMutationId: String
    courseFile: CourseFileType
    data: CourseFileType
    errors: [ErrorType]
}

type AddCourseLinkMutationPayload {
    clientMutationId: String
    courseLink: CourseLinkType
    data: CourseLinkType
    errors: [ErrorType]
}

type AddCourseMutationPayload {
    clientMutationId: String
    course: CourseType
    data: CourseType
    errors: [ErrorType]
}

type AddCourseTimeMutationPayload {
    clientMutationId: String
    courseTime: CourseTimeType
    data: CourseTimeType
    errors: [ErrorType]
}

type AddEmailMutationPayload {
    clientMutationId: String
    email: String!
    errors: [ErrorType]
}

type AddEventMutationPayload {
    calendarEvent: CalendarEventType
    clientMutationId: String
    data: CalendarEventType
    errors: [ErrorType]
}

type AddHomeworkAssignmentMutationPayload {
    clientMutationId: String
    data: HomeworkAssignmentType
    errors: [ErrorType]
    homeworkAssignment: HomeworkAssignmentType
}

type CalendarEventType implements Node {
    date: Date
    description: String
    "The ID of the object."
    id: ID!
    "Leave Blank if Event is All Day"
    time: Time
    title: String
    uid: UUID
    user: AccountType
}

type CalendarEventTypeConnection {
    "Contains the nodes in this connection."
    edges: [CalendarEventTypeEdge]!
    "Pagination data for this connection."
    pageInfo: PageInfo!
}

"A Relay edge containing a `CalendarEventType` and its cursor."
type CalendarEventTypeEdge {
    "A cursor for use in pagination"
    cursor: String!
    "The item at the end of the edge"
    node: CalendarEventType
}

type ChangePasswordMutationPayload {
    clientMutationId: String
    errors: [ErrorType]
    oldpassword: String!
    password1: String!
    password2: String!
}

type CourseFileType implements Node {
    course: CourseType!
    "The ID of the object."
    id: ID!
    title: String
    uid: UUID
}

type CourseFileTypeConnection {
    "Contains the nodes in this connection."
    edges: [CourseFileTypeEdge]!
    "Pagination data for this connection."
    pageInfo: PageInfo!
}

"A Relay edge containing a `CourseFileType` and its cursor."
type CourseFileTypeEdge {
    "A cursor for use in pagination"
    cursor: String!
    "The item at the end of the edge"
    node: CourseFileType
}

type CourseLinkType implements Node {
    course: CourseType!
    "The ID of the object."
    id: ID!
    link: String
    title: String
    uid: UUID
}

type CourseLinkTypeConnection {
    "Contains the nodes in this connection."
    edges: [CourseLinkTypeEdge]!
    "Pagination data for this connection."
    pageInfo: PageInfo!
}

"A Relay edge containing a `CourseLinkType` and its cursor."
type CourseLinkTypeEdge {
    "A cursor for use in pagination"
    cursor: String!
    "The item at the end of the edge"
    node: CourseLinkType
}

type CourseTimeType implements Node {
    course: CourseType!
    endTime: Time
    "The ID of the object."
    id: ID!
    link: String
    "Leave Blank if Class is Online"
    location: String
    startTime: Time
    uid: UUID
    user: AccountType
    "Hold CTRL or CMD to Select Multiple Days"
    weekday: String!
    zoomPassword: String
}

type CourseTimeTypeConnection {
    "Contains the nodes in this connection."
    edges: [CourseTimeTypeEdge]!
    "Pagination data for this connection."
    pageInfo: PageInfo!
}

"A Relay edge containing a `CourseTimeType` and its cursor."
type CourseTimeTypeEdge {
    "A cursor for use in pagination"
    cursor: String!
    "The item at the end of the edge"
    node: CourseTimeType
}

type CourseType implements Node {
    "Color You Want This Class to Show Up as on Calendar and Schedule"
    color: CourseColor!
    "The ID of the object."
    id: ID!
    "Name of Class (CHEM 161, POLS 110, etc.)"
    name: String
    "Not Required"
    teacher: String
    "Full Name of Class (General Chemistry I, etc.)"
    title: String
    uid: UUID
    user: AccountType
}

type CourseTypeConnection {
    "Contains the nodes in this connection."
    edges: [CourseTypeEdge]!
    "Pagination data for this connection."
    pageInfo: PageInfo!
}

"A Relay edge containing a `CourseType` and its cursor."
type CourseTypeEdge {
    "A cursor for use in pagination"
    cursor: String!
    "The item at the end of the edge"
    node: CourseType
}

type ErrorType {
    field: String!
    messages: [String!]!
}

type HomeworkAssignmentType implements Node {
    completed: Boolean!
    course: CourseType
    description: String
    dueDate: Date
    dueTime: Time!
    "The ID of the object."
    id: ID!
    link: String
    name: String
    uid: UUID
}

type HomeworkAssignmentTypeConnection {
    "Contains the nodes in this connection."
    edges: [HomeworkAssignmentTypeEdge]!
    "Pagination data for this connection."
    pageInfo: PageInfo!
}

"A Relay edge containing a `HomeworkAssignmentType` and its cursor."
type HomeworkAssignmentTypeEdge {
    "A cursor for use in pagination"
    cursor: String!
    "The item at the end of the edge"
    node: HomeworkAssignmentType
}

type Mutation {
    addCalendarEvent(input: AddEventMutationInput!): AddEventMutationPayload
    addCourse(input: AddCourseMutationInput!): AddCourseMutationPayload
    addCourseFile(input: AddCourseFileMutationInput!): AddCourseFileMutationPayload
    addCourseLink(input: AddCourseLinkMutationInput!): AddCourseLinkMutationPayload
    addCourseTime(input: AddCourseTimeMutationInput!): AddCourseTimeMutationPayload
    addEmail(input: AddEmailMutationInput!): AddEmailMutationPayload
    addHomeworkAssignment(input: AddHomeworkAssignmentMutationInput!): AddHomeworkAssignmentMutationPayload
    changePassword(input: ChangePasswordMutationInput!): ChangePasswordMutationPayload
    refreshToken(token: String): Refresh
    resetPassword(input: ResetPasswordMutationInput!): ResetPasswordMutationPayload
    resetPasswordKey(input: ResetPasswordKeyMutationInput!): ResetPasswordKeyMutationPayload
    setPassword(input: SetPasswordMutationInput!): SetPasswordMutationPayload
    signup(input: SignupMutationInput!): SignupMutationPayload
    "Obtain JSON Web Token mutation"
    tokenAuth(email: String!, password: String!): ObtainJSONWebToken
    verifyToken(token: String): Verify
}

type NoteType implements Node {
    content: String
    course: CourseType
    "The ID of the object."
    id: ID!
    modified: Date!
    title: String!
    uid: UUID
    uploaded: Date!
    user: AccountType
}

type NoteTypeConnection {
    "Contains the nodes in this connection."
    edges: [NoteTypeEdge]!
    "Pagination data for this connection."
    pageInfo: PageInfo!
}

"A Relay edge containing a `NoteType` and its cursor."
type NoteTypeEdge {
    "A cursor for use in pagination"
    cursor: String!
    "The item at the end of the edge"
    node: NoteType
}

"Obtain JSON Web Token mutation"
type ObtainJSONWebToken {
    payload: GenericScalar!
    refreshExpiresIn: Int!
    token: String!
}

"The Relay compliant `PageInfo` type, containing data necessary to paginate this connection."
type PageInfo {
    "When paginating forwards, the cursor to continue."
    endCursor: String
    "When paginating forwards, are there more items?"
    hasNextPage: Boolean!
    "When paginating backwards, are there more items?"
    hasPreviousPage: Boolean!
    "When paginating backwards, the cursor to continue."
    startCursor: String
}

type Query {
    calendarEvents(after: String, before: String, date: Date, description: String, first: Int, last: Int, offset: Int, time: Time, title: String, token: String, uid: UUID, user: ID): CalendarEventTypeConnection
    courseFiles(after: String, before: String, course_Uid: UUID, first: Int, last: Int, offset: Int, title: String, token: String, uid: UUID): CourseFileTypeConnection
    courseLinks(after: String, before: String, course_Uid: UUID, first: Int, last: Int, link: String, offset: Int, title: String, token: String, uid: UUID): CourseLinkTypeConnection
    courseTimes(after: String, before: String, course_Uid: UUID, endTime: Time, first: Int, last: Int, link: String, location: String, offset: Int, startTime: Time, token: String, uid: UUID, user: ID, weekday: String, zoomPassword: String): CourseTimeTypeConnection
    courses(after: String, before: String, color: String, first: Int, last: Int, name: String, offset: Int, teacher: String, title: String, token: String, uid: UUID, user: ID): CourseTypeConnection
    getSchedule(date: Date, token: String): [CourseTimeType]
    homeworkAssignments(after: String, before: String, completed: Boolean, course_Uid: UUID, description: String, dueDate: Date, dueTime: Time, first: Int, last: Int, link: String, name: String, offset: Int, token: String, uid: UUID): HomeworkAssignmentTypeConnection
    notes(after: String, before: String, content: String, course_Uid: UUID, first: Int, last: Int, modified: Date, offset: Int, title: String, token: String, uid: UUID, uploaded: Date, user: ID): NoteTypeConnection
    user(token: String): AccountType
    users(after: String, before: String, classNotifications: Boolean, dateJoined: DateTime, email: String, exemptFromPayment: Boolean, first: Int, firstName: String, homeworkNotifications: Boolean, isActive: Boolean, isAdmin: Boolean, isStaff: Boolean, isSuperuser: Boolean, last: Int, lastLogin: DateTime, lastName: String, offset: Int, school: String, sendScheduledEmails: Boolean, showScheduleOnCalendar: Boolean, timezone: String, token: String, uid: UUID, username: String): AccountTypeConnection
}

type Refresh {
    payload: GenericScalar!
    refreshExpiresIn: Int!
    token: String!
}

type ResetPasswordKeyMutationPayload {
    clientMutationId: String
    errors: [ErrorType]
    password1: String!
    password2: String!
}

type ResetPasswordMutationPayload {
    clientMutationId: String
    email: String!
    errors: [ErrorType]
}

type SetPasswordMutationPayload {
    clientMutationId: String
    errors: [ErrorType]
    password1: String!
    password2: String!
}

type SignupMutationPayload {
    clientMutationId: String
    email: String!
    errors: [ErrorType]
    firstName: String!
    lastName: String!
    password1: String!
    password2: String!
    token: String
    username: String!
}

type Verify {
    payload: GenericScalar!
}

"An enumeration."
enum AccountTimezone {
    "Africa/Abidjan"
    AFRICA_ABIDJAN
    "Africa/Accra"
    AFRICA_ACCRA
    "Africa/Addis Ababa"
    AFRICA_ADDIS_ABABA
    "Africa/Algiers"
    AFRICA_ALGIERS
    "Africa/Asmara"
    AFRICA_ASMARA
    "Africa/Asmera"
    AFRICA_ASMERA
    "Africa/Bamako"
    AFRICA_BAMAKO
    "Africa/Bangui"
    AFRICA_BANGUI
    "Africa/Banjul"
    AFRICA_BANJUL
    "Africa/Bissau"
    AFRICA_BISSAU
    "Africa/Blantyre"
    AFRICA_BLANTYRE
    "Africa/Brazzaville"
    AFRICA_BRAZZAVILLE
    "Africa/Bujumbura"
    AFRICA_BUJUMBURA
    "Africa/Cairo"
    AFRICA_CAIRO
    "Africa/Casablanca"
    AFRICA_CASABLANCA
    "Africa/Ceuta"
    AFRICA_CEUTA
    "Africa/Conakry"
    AFRICA_CONAKRY
    "Africa/Dakar"
    AFRICA_DAKAR
    "Africa/Dar es Salaam"
    AFRICA_DAR_ES_SALAAM
    "Africa/Djibouti"
    AFRICA_DJIBOUTI
    "Africa/Douala"
    AFRICA_DOUALA
    "Africa/El Aaiun"
    AFRICA_EL_AAIUN
    "Africa/Freetown"
    AFRICA_FREETOWN
    "Africa/Gaborone"
    AFRICA_GABORONE
    "Africa/Harare"
    AFRICA_HARARE
    "Africa/Johannesburg"
    AFRICA_JOHANNESBURG
    "Africa/Juba"
    AFRICA_JUBA
    "Africa/Kampala"
    AFRICA_KAMPALA
    "Africa/Khartoum"
    AFRICA_KHARTOUM
    "Africa/Kigali"
    AFRICA_KIGALI
    "Africa/Kinshasa"
    AFRICA_KINSHASA
    "Africa/Lagos"
    AFRICA_LAGOS
    "Africa/Libreville"
    AFRICA_LIBREVILLE
    "Africa/Lome"
    AFRICA_LOME
    "Africa/Luanda"
    AFRICA_LUANDA
    "Africa/Lubumbashi"
    AFRICA_LUBUMBASHI
    "Africa/Lusaka"
    AFRICA_LUSAKA
    "Africa/Malabo"
    AFRICA_MALABO
    "Africa/Maputo"
    AFRICA_MAPUTO
    "Africa/Maseru"
    AFRICA_MASERU
    "Africa/Mbabane"
    AFRICA_MBABANE
    "Africa/Mogadishu"
    AFRICA_MOGADISHU
    "Africa/Monrovia"
    AFRICA_MONROVIA
    "Africa/Nairobi"
    AFRICA_NAIROBI
    "Africa/Ndjamena"
    AFRICA_NDJAMENA
    "Africa/Niamey"
    AFRICA_NIAMEY
    "Africa/Nouakchott"
    AFRICA_NOUAKCHOTT
    "Africa/Ouagadougou"
    AFRICA_OUAGADOUGOU
    "Africa/Porto-Novo"
    AFRICA_PORTO_NOVO
    "Africa/Sao Tome"
    AFRICA_SAO_TOME
    "Africa/Timbuktu"
    AFRICA_TIMBUKTU
    "Africa/Tripoli"
    AFRICA_TRIPOLI
    "Africa/Tunis"
    AFRICA_TUNIS
    "Africa/Windhoek"
    AFRICA_WINDHOEK
    "America/Adak"
    AMERICA_ADAK
    "America/Anchorage"
    AMERICA_ANCHORAGE
    "America/Anguilla"
    AMERICA_ANGUILLA
    "America/Antigua"
    AMERICA_ANTIGUA
    "America/Araguaina"
    AMERICA_ARAGUAINA
    "America/Argentina/Buenos Aires"
    AMERICA_ARGENTINA_BUENOS_AIRES
    "America/Argentina/Catamarca"
    AMERICA_ARGENTINA_CATAMARCA
    "America/Argentina/ComodRivadavia"
    AMERICA_ARGENTINA_COMODRIVADAVIA
    "America/Argentina/Cordoba"
    AMERICA_ARGENTINA_CORDOBA
    "America/Argentina/Jujuy"
    AMERICA_ARGENTINA_JUJUY
    "America/Argentina/La Rioja"
    AMERICA_ARGENTINA_LA_RIOJA
    "America/Argentina/Mendoza"
    AMERICA_ARGENTINA_MENDOZA
    "America/Argentina/Rio Gallegos"
    AMERICA_ARGENTINA_RIO_GALLEGOS
    "America/Argentina/Salta"
    AMERICA_ARGENTINA_SALTA
    "America/Argentina/San Juan"
    AMERICA_ARGENTINA_SAN_JUAN
    "America/Argentina/San Luis"
    AMERICA_ARGENTINA_SAN_LUIS
    "America/Argentina/Tucuman"
    AMERICA_ARGENTINA_TUCUMAN
    "America/Argentina/Ushuaia"
    AMERICA_ARGENTINA_USHUAIA
    "America/Aruba"
    AMERICA_ARUBA
    "America/Asuncion"
    AMERICA_ASUNCION
    "America/Atikokan"
    AMERICA_ATIKOKAN
    "America/Atka"
    AMERICA_ATKA
    "America/Bahia"
    AMERICA_BAHIA
    "America/Bahia Banderas"
    AMERICA_BAHIA_BANDERAS
    "America/Barbados"
    AMERICA_BARBADOS
    "America/Belem"
    AMERICA_BELEM
    "America/Belize"
    AMERICA_BELIZE
    "America/Blanc-Sablon"
    AMERICA_BLANC_SABLON
    "America/Boa Vista"
    AMERICA_BOA_VISTA
    "America/Bogota"
    AMERICA_BOGOTA
    "America/Boise"
    AMERICA_BOISE
    "America/Buenos Aires"
    AMERICA_BUENOS_AIRES
    "America/Cambridge Bay"
    AMERICA_CAMBRIDGE_BAY
    "America/Campo Grande"
    AMERICA_CAMPO_GRANDE
    "America/Cancun"
    AMERICA_CANCUN
    "America/Caracas"
    AMERICA_CARACAS
    "America/Catamarca"
    AMERICA_CATAMARCA
    "America/Cayenne"
    AMERICA_CAYENNE
    "America/Cayman"
    AMERICA_CAYMAN
    "America/Chicago"
    AMERICA_CHICAGO
    "America/Chihuahua"
    AMERICA_CHIHUAHUA
    "America/Coral Harbour"
    AMERICA_CORAL_HARBOUR
    "America/Cordoba"
    AMERICA_CORDOBA
    "America/Costa Rica"
    AMERICA_COSTA_RICA
    "America/Creston"
    AMERICA_CRESTON
    "America/Cuiaba"
    AMERICA_CUIABA
    "America/Curacao"
    AMERICA_CURACAO
    "America/Danmarkshavn"
    AMERICA_DANMARKSHAVN
    "America/Dawson"
    AMERICA_DAWSON
    "America/Dawson Creek"
    AMERICA_DAWSON_CREEK
    "America/Denver"
    AMERICA_DENVER
    "America/Detroit"
    AMERICA_DETROIT
    "America/Dominica"
    AMERICA_DOMINICA
    "America/Edmonton"
    AMERICA_EDMONTON
    "America/Eirunepe"
    AMERICA_EIRUNEPE
    "America/El Salvador"
    AMERICA_EL_SALVADOR
    "America/Ensenada"
    AMERICA_ENSENADA
    "America/Fortaleza"
    AMERICA_FORTALEZA
    "America/Fort Nelson"
    AMERICA_FORT_NELSON
    "America/Fort Wayne"
    AMERICA_FORT_WAYNE
    "America/Glace Bay"
    AMERICA_GLACE_BAY
    "America/Godthab"
    AMERICA_GODTHAB
    "America/Goose Bay"
    AMERICA_GOOSE_BAY
    "America/Grand Turk"
    AMERICA_GRAND_TURK
    "America/Grenada"
    AMERICA_GRENADA
    "America/Guadeloupe"
    AMERICA_GUADELOUPE
    "America/Guatemala"
    AMERICA_GUATEMALA
    "America/Guayaquil"
    AMERICA_GUAYAQUIL
    "America/Guyana"
    AMERICA_GUYANA
    "America/Halifax"
    AMERICA_HALIFAX
    "America/Havana"
    AMERICA_HAVANA
    "America/Hermosillo"
    AMERICA_HERMOSILLO
    "America/Indianapolis"
    AMERICA_INDIANAPOLIS
    "America/Indiana/Indianapolis"
    AMERICA_INDIANA_INDIANAPOLIS
    "America/Indiana/Knox"
    AMERICA_INDIANA_KNOX
    "America/Indiana/Marengo"
    AMERICA_INDIANA_MARENGO
    "America/Indiana/Petersburg"
    AMERICA_INDIANA_PETERSBURG
    "America/Indiana/Tell City"
    AMERICA_INDIANA_TELL_CITY
    "America/Indiana/Vevay"
    AMERICA_INDIANA_VEVAY
    "America/Indiana/Vincennes"
    AMERICA_INDIANA_VINCENNES
    "America/Indiana/Winamac"
    AMERICA_INDIANA_WINAMAC
    "America/Inuvik"
    AMERICA_INUVIK
    "America/Iqaluit"
    AMERICA_IQALUIT
    "America/Jamaica"
    AMERICA_JAMAICA
    "America/Jujuy"
    AMERICA_JUJUY
    "America/Juneau"
    AMERICA_JUNEAU
    "America/Kentucky/Louisville"
    AMERICA_KENTUCKY_LOUISVILLE
    "America/Kentucky/Monticello"
    AMERICA_KENTUCKY_MONTICELLO
    "America/Knox IN"
    AMERICA_KNOX_IN
    "America/Kralendijk"
    AMERICA_KRALENDIJK
    "America/La Paz"
    AMERICA_LA_PAZ
    "America/Lima"
    AMERICA_LIMA
    "America/Los Angeles"
    AMERICA_LOS_ANGELES
    "America/Louisville"
    AMERICA_LOUISVILLE
    "America/Lower Princes"
    AMERICA_LOWER_PRINCES
    "America/Maceio"
    AMERICA_MACEIO
    "America/Managua"
    AMERICA_MANAGUA
    "America/Manaus"
    AMERICA_MANAUS
    "America/Marigot"
    AMERICA_MARIGOT
    "America/Martinique"
    AMERICA_MARTINIQUE
    "America/Matamoros"
    AMERICA_MATAMOROS
    "America/Mazatlan"
    AMERICA_MAZATLAN
    "America/Mendoza"
    AMERICA_MENDOZA
    "America/Menominee"
    AMERICA_MENOMINEE
    "America/Merida"
    AMERICA_MERIDA
    "America/Metlakatla"
    AMERICA_METLAKATLA
    "America/Mexico City"
    AMERICA_MEXICO_CITY
    "America/Miquelon"
    AMERICA_MIQUELON
    "America/Moncton"
    AMERICA_MONCTON
    "America/Monterrey"
    AMERICA_MONTERREY
    "America/Montevideo"
    AMERICA_MONTEVIDEO
    "America/Montreal"
    AMERICA_MONTREAL
    "America/Montserrat"
    AMERICA_MONTSERRAT
    "America/Nassau"
    AMERICA_NASSAU
    "America/New York"
    AMERICA_NEW_YORK
    "America/Nipigon"
    AMERICA_NIPIGON
    "America/Nome"
    AMERICA_NOME
    "America/Noronha"
    AMERICA_NORONHA
    "America/North Dakota/Beulah"
    AMERICA_NORTH_DAKOTA_BEULAH
    "America/North Dakota/Center"
    AMERICA_NORTH_DAKOTA_CENTER
    "America/North Dakota/New Salem"
    AMERICA_NORTH_DAKOTA_NEW_SALEM
    "America/Nuuk"
    AMERICA_NUUK
    "America/Ojinaga"
    AMERICA_OJINAGA
    "America/Panama"
    AMERICA_PANAMA
    "America/Pangnirtung"
    AMERICA_PANGNIRTUNG
    "America/Paramaribo"
    AMERICA_PARAMARIBO
    "America/Phoenix"
    AMERICA_PHOENIX
    "America/Porto Acre"
    AMERICA_PORTO_ACRE
    "America/Porto Velho"
    AMERICA_PORTO_VELHO
    "America/Port-au-Prince"
    AMERICA_PORT_AU_PRINCE
    "America/Port of Spain"
    AMERICA_PORT_OF_SPAIN
    "America/Puerto Rico"
    AMERICA_PUERTO_RICO
    "America/Punta Arenas"
    AMERICA_PUNTA_ARENAS
    "America/Rainy River"
    AMERICA_RAINY_RIVER
    "America/Rankin Inlet"
    AMERICA_RANKIN_INLET
    "America/Recife"
    AMERICA_RECIFE
    "America/Regina"
    AMERICA_REGINA
    "America/Resolute"
    AMERICA_RESOLUTE
    "America/Rio Branco"
    AMERICA_RIO_BRANCO
    "America/Rosario"
    AMERICA_ROSARIO
    "America/Santarem"
    AMERICA_SANTAREM
    "America/Santa Isabel"
    AMERICA_SANTA_ISABEL
    "America/Santiago"
    AMERICA_SANTIAGO
    "America/Santo Domingo"
    AMERICA_SANTO_DOMINGO
    "America/Sao Paulo"
    AMERICA_SAO_PAULO
    "America/Scoresbysund"
    AMERICA_SCORESBYSUND
    "America/Shiprock"
    AMERICA_SHIPROCK
    "America/Sitka"
    AMERICA_SITKA
    "America/St Barthelemy"
    AMERICA_ST_BARTHELEMY
    "America/St Johns"
    AMERICA_ST_JOHNS
    "America/St Kitts"
    AMERICA_ST_KITTS
    "America/St Lucia"
    AMERICA_ST_LUCIA
    "America/St Thomas"
    AMERICA_ST_THOMAS
    "America/St Vincent"
    AMERICA_ST_VINCENT
    "America/Swift Current"
    AMERICA_SWIFT_CURRENT
    "America/Tegucigalpa"
    AMERICA_TEGUCIGALPA
    "America/Thule"
    AMERICA_THULE
    "America/Thunder Bay"
    AMERICA_THUNDER_BAY
    "America/Tijuana"
    AMERICA_TIJUANA
    "America/Toronto"
    AMERICA_TORONTO
    "America/Tortola"
    AMERICA_TORTOLA
    "America/Vancouver"
    AMERICA_VANCOUVER
    "America/Virgin"
    AMERICA_VIRGIN
    "America/Whitehorse"
    AMERICA_WHITEHORSE
    "America/Winnipeg"
    AMERICA_WINNIPEG
    "America/Yakutat"
    AMERICA_YAKUTAT
    "America/Yellowknife"
    AMERICA_YELLOWKNIFE
    "Antarctica/Casey"
    ANTARCTICA_CASEY
    "Antarctica/Davis"
    ANTARCTICA_DAVIS
    "Antarctica/DumontDUrville"
    ANTARCTICA_DUMONTDURVILLE
    "Antarctica/Macquarie"
    ANTARCTICA_MACQUARIE
    "Antarctica/Mawson"
    ANTARCTICA_MAWSON
    "Antarctica/McMurdo"
    ANTARCTICA_MCMURDO
    "Antarctica/Palmer"
    ANTARCTICA_PALMER
    "Antarctica/Rothera"
    ANTARCTICA_ROTHERA
    "Antarctica/South Pole"
    ANTARCTICA_SOUTH_POLE
    "Antarctica/Syowa"
    ANTARCTICA_SYOWA
    "Antarctica/Troll"
    ANTARCTICA_TROLL
    "Antarctica/Vostok"
    ANTARCTICA_VOSTOK
    "Arctic/Longyearbyen"
    ARCTIC_LONGYEARBYEN
    "Asia/Aden"
    ASIA_ADEN
    "Asia/Almaty"
    ASIA_ALMATY
    "Asia/Amman"
    ASIA_AMMAN
    "Asia/Anadyr"
    ASIA_ANADYR
    "Asia/Aqtau"
    ASIA_AQTAU
    "Asia/Aqtobe"
    ASIA_AQTOBE
    "Asia/Ashgabat"
    ASIA_ASHGABAT
    "Asia/Ashkhabad"
    ASIA_ASHKHABAD
    "Asia/Atyrau"
    ASIA_ATYRAU
    "Asia/Baghdad"
    ASIA_BAGHDAD
    "Asia/Bahrain"
    ASIA_BAHRAIN
    "Asia/Baku"
    ASIA_BAKU
    "Asia/Bangkok"
    ASIA_BANGKOK
    "Asia/Barnaul"
    ASIA_BARNAUL
    "Asia/Beirut"
    ASIA_BEIRUT
    "Asia/Bishkek"
    ASIA_BISHKEK
    "Asia/Brunei"
    ASIA_BRUNEI
    "Asia/Calcutta"
    ASIA_CALCUTTA
    "Asia/Chita"
    ASIA_CHITA
    "Asia/Choibalsan"
    ASIA_CHOIBALSAN
    "Asia/Chongqing"
    ASIA_CHONGQING
    "Asia/Chungking"
    ASIA_CHUNGKING
    "Asia/Colombo"
    ASIA_COLOMBO
    "Asia/Dacca"
    ASIA_DACCA
    "Asia/Damascus"
    ASIA_DAMASCUS
    "Asia/Dhaka"
    ASIA_DHAKA
    "Asia/Dili"
    ASIA_DILI
    "Asia/Dubai"
    ASIA_DUBAI
    "Asia/Dushanbe"
    ASIA_DUSHANBE
    "Asia/Famagusta"
    ASIA_FAMAGUSTA
    "Asia/Gaza"
    ASIA_GAZA
    "Asia/Harbin"
    ASIA_HARBIN
    "Asia/Hebron"
    ASIA_HEBRON
    "Asia/Hong Kong"
    ASIA_HONG_KONG
    "Asia/Hovd"
    ASIA_HOVD
    "Asia/Ho Chi Minh"
    ASIA_HO_CHI_MINH
    "Asia/Irkutsk"
    ASIA_IRKUTSK
    "Asia/Istanbul"
    ASIA_ISTANBUL
    "Asia/Jakarta"
    ASIA_JAKARTA
    "Asia/Jayapura"
    ASIA_JAYAPURA
    "Asia/Jerusalem"
    ASIA_JERUSALEM
    "Asia/Kabul"
    ASIA_KABUL
    "Asia/Kamchatka"
    ASIA_KAMCHATKA
    "Asia/Karachi"
    ASIA_KARACHI
    "Asia/Kashgar"
    ASIA_KASHGAR
    "Asia/Kathmandu"
    ASIA_KATHMANDU
    "Asia/Katmandu"
    ASIA_KATMANDU
    "Asia/Khandyga"
    ASIA_KHANDYGA
    "Asia/Kolkata"
    ASIA_KOLKATA
    "Asia/Krasnoyarsk"
    ASIA_KRASNOYARSK
    "Asia/Kuala Lumpur"
    ASIA_KUALA_LUMPUR
    "Asia/Kuching"
    ASIA_KUCHING
    "Asia/Kuwait"
    ASIA_KUWAIT
    "Asia/Macao"
    ASIA_MACAO
    "Asia/Macau"
    ASIA_MACAU
    "Asia/Magadan"
    ASIA_MAGADAN
    "Asia/Makassar"
    ASIA_MAKASSAR
    "Asia/Manila"
    ASIA_MANILA
    "Asia/Muscat"
    ASIA_MUSCAT
    "Asia/Nicosia"
    ASIA_NICOSIA
    "Asia/Novokuznetsk"
    ASIA_NOVOKUZNETSK
    "Asia/Novosibirsk"
    ASIA_NOVOSIBIRSK
    "Asia/Omsk"
    ASIA_OMSK
    "Asia/Oral"
    ASIA_ORAL
    "Asia/Phnom Penh"
    ASIA_PHNOM_PENH
    "Asia/Pontianak"
    ASIA_PONTIANAK
    "Asia/Pyongyang"
    ASIA_PYONGYANG
    "Asia/Qatar"
    ASIA_QATAR
    "Asia/Qostanay"
    ASIA_QOSTANAY
    "Asia/Qyzylorda"
    ASIA_QYZYLORDA
    "Asia/Rangoon"
    ASIA_RANGOON
    "Asia/Riyadh"
    ASIA_RIYADH
    "Asia/Saigon"
    ASIA_SAIGON
    "Asia/Sakhalin"
    ASIA_SAKHALIN
    "Asia/Samarkand"
    ASIA_SAMARKAND
    "Asia/Seoul"
    ASIA_SEOUL
    "Asia/Shanghai"
    ASIA_SHANGHAI
    "Asia/Singapore"
    ASIA_SINGAPORE
    "Asia/Srednekolymsk"
    ASIA_SREDNEKOLYMSK
    "Asia/Taipei"
    ASIA_TAIPEI
    "Asia/Tashkent"
    ASIA_TASHKENT
    "Asia/Tbilisi"
    ASIA_TBILISI
    "Asia/Tehran"
    ASIA_TEHRAN
    "Asia/Tel Aviv"
    ASIA_TEL_AVIV
    "Asia/Thimbu"
    ASIA_THIMBU
    "Asia/Thimphu"
    ASIA_THIMPHU
    "Asia/Tokyo"
    ASIA_TOKYO
    "Asia/Tomsk"
    ASIA_TOMSK
    "Asia/Ujung Pandang"
    ASIA_UJUNG_PANDANG
    "Asia/Ulaanbaatar"
    ASIA_ULAANBAATAR
    "Asia/Ulan Bator"
    ASIA_ULAN_BATOR
    "Asia/Urumqi"
    ASIA_URUMQI
    "Asia/Ust-Nera"
    ASIA_UST_NERA
    "Asia/Vientiane"
    ASIA_VIENTIANE
    "Asia/Vladivostok"
    ASIA_VLADIVOSTOK
    "Asia/Yakutsk"
    ASIA_YAKUTSK
    "Asia/Yangon"
    ASIA_YANGON
    "Asia/Yekaterinburg"
    ASIA_YEKATERINBURG
    "Asia/Yerevan"
    ASIA_YEREVAN
    "Atlantic/Azores"
    ATLANTIC_AZORES
    "Atlantic/Bermuda"
    ATLANTIC_BERMUDA
    "Atlantic/Canary"
    ATLANTIC_CANARY
    "Atlantic/Cape Verde"
    ATLANTIC_CAPE_VERDE
    "Atlantic/Faeroe"
    ATLANTIC_FAEROE
    "Atlantic/Faroe"
    ATLANTIC_FAROE
    "Atlantic/Jan Mayen"
    ATLANTIC_JAN_MAYEN
    "Atlantic/Madeira"
    ATLANTIC_MADEIRA
    "Atlantic/Reykjavik"
    ATLANTIC_REYKJAVIK
    "Atlantic/South Georgia"
    ATLANTIC_SOUTH_GEORGIA
    "Atlantic/Stanley"
    ATLANTIC_STANLEY
    "Atlantic/St Helena"
    ATLANTIC_ST_HELENA
    "Australia/ACT"
    AUSTRALIA_ACT
    "Australia/Adelaide"
    AUSTRALIA_ADELAIDE
    "Australia/Brisbane"
    AUSTRALIA_BRISBANE
    "Australia/Broken Hill"
    AUSTRALIA_BROKEN_HILL
    "Australia/Canberra"
    AUSTRALIA_CANBERRA
    "Australia/Currie"
    AUSTRALIA_CURRIE
    "Australia/Darwin"
    AUSTRALIA_DARWIN
    "Australia/Eucla"
    AUSTRALIA_EUCLA
    "Australia/Hobart"
    AUSTRALIA_HOBART
    "Australia/LHI"
    AUSTRALIA_LHI
    "Australia/Lindeman"
    AUSTRALIA_LINDEMAN
    "Australia/Lord Howe"
    AUSTRALIA_LORD_HOWE
    "Australia/Melbourne"
    AUSTRALIA_MELBOURNE
    "Australia/North"
    AUSTRALIA_NORTH
    "Australia/NSW"
    AUSTRALIA_NSW
    "Australia/Perth"
    AUSTRALIA_PERTH
    "Australia/Queensland"
    AUSTRALIA_QUEENSLAND
    "Australia/South"
    AUSTRALIA_SOUTH
    "Australia/Sydney"
    AUSTRALIA_SYDNEY
    "Australia/Tasmania"
    AUSTRALIA_TASMANIA
    "Australia/Victoria"
    AUSTRALIA_VICTORIA
    "Australia/West"
    AUSTRALIA_WEST
    "Australia/Yancowinna"
    AUSTRALIA_YANCOWINNA
    "Brazil/Acre"
    BRAZIL_ACRE
    "Brazil/DeNoronha"
    BRAZIL_DENORONHA
    "Brazil/East"
    BRAZIL_EAST
    "Brazil/West"
    BRAZIL_WEST
    "Canada/Atlantic"
    CANADA_ATLANTIC
    "Canada/Central"
    CANADA_CENTRAL
    "Canada/Eastern"
    CANADA_EASTERN
    "Canada/Mountain"
    CANADA_MOUNTAIN
    "Canada/Newfoundland"
    CANADA_NEWFOUNDLAND
    "Canada/Pacific"
    CANADA_PACIFIC
    "Canada/Saskatchewan"
    CANADA_SASKATCHEWAN
    "Canada/Yukon"
    CANADA_YUKON
    "CET"
    CET
    "Chile/Continental"
    CHILE_CONTINENTAL
    "Chile/EasterIsland"
    CHILE_EASTERISLAND
    "CST6CDT"
    CST6CDT
    "Cuba"
    CUBA
    "EET"
    EET
    "Egypt"
    EGYPT
    "Eire"
    EIRE
    "EST"
    EST
    "EST5EDT"
    EST5EDT
    "Etc/GMT"
    ETC_GMT
    "Etc/GMT0"
    ETC_GMT0
    "Etc/GMT+0"
    ETC_GMT_0
    "Etc/GMT-0"
    ETC_GMT_0_404
    "Etc/GMT+1"
    ETC_GMT_1
    "Etc/GMT+10"
    ETC_GMT_10
    "Etc/GMT-10"
    ETC_GMT_10_406
    "Etc/GMT+11"
    ETC_GMT_11
    "Etc/GMT-11"
    ETC_GMT_11_407
    "Etc/GMT+12"
    ETC_GMT_12
    "Etc/GMT-12"
    ETC_GMT_12_408
    "Etc/GMT-13"
    ETC_GMT_13
    "Etc/GMT-14"
    ETC_GMT_14
    "Etc/GMT-1"
    ETC_GMT_1_405
    "Etc/GMT+2"
    ETC_GMT_2
    "Etc/GMT-2"
    ETC_GMT_2_411
    "Etc/GMT+3"
    ETC_GMT_3
    "Etc/GMT-3"
    ETC_GMT_3_412
    "Etc/GMT+4"
    ETC_GMT_4
    "Etc/GMT-4"
    ETC_GMT_4_413
    "Etc/GMT+5"
    ETC_GMT_5
    "Etc/GMT-5"
    ETC_GMT_5_414
    "Etc/GMT+6"
    ETC_GMT_6
    "Etc/GMT-6"
    ETC_GMT_6_415
    "Etc/GMT+7"
    ETC_GMT_7
    "Etc/GMT-7"
    ETC_GMT_7_416
    "Etc/GMT+8"
    ETC_GMT_8
    "Etc/GMT-8"
    ETC_GMT_8_417
    "Etc/GMT+9"
    ETC_GMT_9
    "Etc/GMT-9"
    ETC_GMT_9_418
    "Etc/Greenwich"
    ETC_GREENWICH
    "Etc/UCT"
    ETC_UCT
    "Etc/Universal"
    ETC_UNIVERSAL
    "Etc/UTC"
    ETC_UTC
    "Etc/Zulu"
    ETC_ZULU
    "Europe/Amsterdam"
    EUROPE_AMSTERDAM
    "Europe/Andorra"
    EUROPE_ANDORRA
    "Europe/Astrakhan"
    EUROPE_ASTRAKHAN
    "Europe/Athens"
    EUROPE_ATHENS
    "Europe/Belfast"
    EUROPE_BELFAST
    "Europe/Belgrade"
    EUROPE_BELGRADE
    "Europe/Berlin"
    EUROPE_BERLIN
    "Europe/Bratislava"
    EUROPE_BRATISLAVA
    "Europe/Brussels"
    EUROPE_BRUSSELS
    "Europe/Bucharest"
    EUROPE_BUCHAREST
    "Europe/Budapest"
    EUROPE_BUDAPEST
    "Europe/Busingen"
    EUROPE_BUSINGEN
    "Europe/Chisinau"
    EUROPE_CHISINAU
    "Europe/Copenhagen"
    EUROPE_COPENHAGEN
    "Europe/Dublin"
    EUROPE_DUBLIN
    "Europe/Gibraltar"
    EUROPE_GIBRALTAR
    "Europe/Guernsey"
    EUROPE_GUERNSEY
    "Europe/Helsinki"
    EUROPE_HELSINKI
    "Europe/Isle of Man"
    EUROPE_ISLE_OF_MAN
    "Europe/Istanbul"
    EUROPE_ISTANBUL
    "Europe/Jersey"
    EUROPE_JERSEY
    "Europe/Kaliningrad"
    EUROPE_KALININGRAD
    "Europe/Kiev"
    EUROPE_KIEV
    "Europe/Kirov"
    EUROPE_KIROV
    "Europe/Lisbon"
    EUROPE_LISBON
    "Europe/Ljubljana"
    EUROPE_LJUBLJANA
    "Europe/London"
    EUROPE_LONDON
    "Europe/Luxembourg"
    EUROPE_LUXEMBOURG
    "Europe/Madrid"
    EUROPE_MADRID
    "Europe/Malta"
    EUROPE_MALTA
    "Europe/Mariehamn"
    EUROPE_MARIEHAMN
    "Europe/Minsk"
    EUROPE_MINSK
    "Europe/Monaco"
    EUROPE_MONACO
    "Europe/Moscow"
    EUROPE_MOSCOW
    "Europe/Nicosia"
    EUROPE_NICOSIA
    "Europe/Oslo"
    EUROPE_OSLO
    "Europe/Paris"
    EUROPE_PARIS
    "Europe/Podgorica"
    EUROPE_PODGORICA
    "Europe/Prague"
    EUROPE_PRAGUE
    "Europe/Riga"
    EUROPE_RIGA
    "Europe/Rome"
    EUROPE_ROME
    "Europe/Samara"
    EUROPE_SAMARA
    "Europe/San Marino"
    EUROPE_SAN_MARINO
    "Europe/Sarajevo"
    EUROPE_SARAJEVO
    "Europe/Saratov"
    EUROPE_SARATOV
    "Europe/Simferopol"
    EUROPE_SIMFEROPOL
    "Europe/Skopje"
    EUROPE_SKOPJE
    "Europe/Sofia"
    EUROPE_SOFIA
    "Europe/Stockholm"
    EUROPE_STOCKHOLM
    "Europe/Tallinn"
    EUROPE_TALLINN
    "Europe/Tirane"
    EUROPE_TIRANE
    "Europe/Tiraspol"
    EUROPE_TIRASPOL
    "Europe/Ulyanovsk"
    EUROPE_ULYANOVSK
    "Europe/Uzhgorod"
    EUROPE_UZHGOROD
    "Europe/Vaduz"
    EUROPE_VADUZ
    "Europe/Vatican"
    EUROPE_VATICAN
    "Europe/Vienna"
    EUROPE_VIENNA
    "Europe/Vilnius"
    EUROPE_VILNIUS
    "Europe/Volgograd"
    EUROPE_VOLGOGRAD
    "Europe/Warsaw"
    EUROPE_WARSAW
    "Europe/Zagreb"
    EUROPE_ZAGREB
    "Europe/Zaporozhye"
    EUROPE_ZAPOROZHYE
    "Europe/Zurich"
    EUROPE_ZURICH
    "GB"
    GB
    "GB-Eire"
    GB_EIRE
    "GMT"
    GMT
    "GMT0"
    GMT0
    "GMT+0"
    GMT_0
    "GMT-0"
    GMT_0_492
    "Greenwich"
    GREENWICH
    "Hongkong"
    HONGKONG
    "HST"
    HST
    "Iceland"
    ICELAND
    "Indian/Antananarivo"
    INDIAN_ANTANANARIVO
    "Indian/Chagos"
    INDIAN_CHAGOS
    "Indian/Christmas"
    INDIAN_CHRISTMAS
    "Indian/Cocos"
    INDIAN_COCOS
    "Indian/Comoro"
    INDIAN_COMORO
    "Indian/Kerguelen"
    INDIAN_KERGUELEN
    "Indian/Mahe"
    INDIAN_MAHE
    "Indian/Maldives"
    INDIAN_MALDIVES
    "Indian/Mauritius"
    INDIAN_MAURITIUS
    "Indian/Mayotte"
    INDIAN_MAYOTTE
    "Indian/Reunion"
    INDIAN_REUNION
    "Iran"
    IRAN
    "Israel"
    ISRAEL
    "Jamaica"
    JAMAICA
    "Japan"
    JAPAN
    "Kwajalein"
    KWAJALEIN
    "Libya"
    LIBYA
    "MET"
    MET
    "Mexico/BajaNorte"
    MEXICO_BAJANORTE
    "Mexico/BajaSur"
    MEXICO_BAJASUR
    "Mexico/General"
    MEXICO_GENERAL
    "MST"
    MST
    "MST7MDT"
    MST7MDT
    "Navajo"
    NAVAJO
    "NZ"
    NZ
    "NZ-CHAT"
    NZ_CHAT
    "Pacific/Apia"
    PACIFIC_APIA
    "Pacific/Auckland"
    PACIFIC_AUCKLAND
    "Pacific/Bougainville"
    PACIFIC_BOUGAINVILLE
    "Pacific/Chatham"
    PACIFIC_CHATHAM
    "Pacific/Chuuk"
    PACIFIC_CHUUK
    "Pacific/Easter"
    PACIFIC_EASTER
    "Pacific/Efate"
    PACIFIC_EFATE
    "Pacific/Enderbury"
    PACIFIC_ENDERBURY
    "Pacific/Fakaofo"
    PACIFIC_FAKAOFO
    "Pacific/Fiji"
    PACIFIC_FIJI
    "Pacific/Funafuti"
    PACIFIC_FUNAFUTI
    "Pacific/Galapagos"
    PACIFIC_GALAPAGOS
    "Pacific/Gambier"
    PACIFIC_GAMBIER
    "Pacific/Guadalcanal"
    PACIFIC_GUADALCANAL
    "Pacific/Guam"
    PACIFIC_GUAM
    "Pacific/Honolulu"
    PACIFIC_HONOLULU
    "Pacific/Johnston"
    PACIFIC_JOHNSTON
    "Pacific/Kiritimati"
    PACIFIC_KIRITIMATI
    "Pacific/Kosrae"
    PACIFIC_KOSRAE
    "Pacific/Kwajalein"
    PACIFIC_KWAJALEIN
    "Pacific/Majuro"
    PACIFIC_MAJURO
    "Pacific/Marquesas"
    PACIFIC_MARQUESAS
    "Pacific/Midway"
    PACIFIC_MIDWAY
    "Pacific/Nauru"
    PACIFIC_NAURU
    "Pacific/Niue"
    PACIFIC_NIUE
    "Pacific/Norfolk"
    PACIFIC_NORFOLK
    "Pacific/Noumea"
    PACIFIC_NOUMEA
    "Pacific/Pago Pago"
    PACIFIC_PAGO_PAGO
    "Pacific/Palau"
    PACIFIC_PALAU
    "Pacific/Pitcairn"
    PACIFIC_PITCAIRN
    "Pacific/Pohnpei"
    PACIFIC_POHNPEI
    "Pacific/Ponape"
    PACIFIC_PONAPE
    "Pacific/Port Moresby"
    PACIFIC_PORT_MORESBY
    "Pacific/Rarotonga"
    PACIFIC_RAROTONGA
    "Pacific/Saipan"
    PACIFIC_SAIPAN
    "Pacific/Samoa"
    PACIFIC_SAMOA
    "Pacific/Tahiti"
    PACIFIC_TAHITI
    "Pacific/Tarawa"
    PACIFIC_TARAWA
    "Pacific/Tongatapu"
    PACIFIC_TONGATAPU
    "Pacific/Truk"
    PACIFIC_TRUK
    "Pacific/Wake"
    PACIFIC_WAKE
    "Pacific/Wallis"
    PACIFIC_WALLIS
    "Pacific/Yap"
    PACIFIC_YAP
    "Poland"
    POLAND
    "Portugal"
    PORTUGAL
    "PRC"
    PRC
    "PST8PDT"
    PST8PDT
    "ROC"
    ROC
    "ROK"
    ROK
    "Singapore"
    SINGAPORE
    "Turkey"
    TURKEY
    "UCT"
    UCT
    "Universal"
    UNIVERSAL
    "US/Alaska"
    US_ALASKA
    "US/Aleutian"
    US_ALEUTIAN
    "US/Arizona"
    US_ARIZONA
    "US/Central"
    US_CENTRAL
    "US/Eastern"
    US_EASTERN
    "US/East-Indiana"
    US_EAST_INDIANA
    "US/Hawaii"
    US_HAWAII
    "US/Indiana-Starke"
    US_INDIANA_STARKE
    "US/Michigan"
    US_MICHIGAN
    "US/Mountain"
    US_MOUNTAIN
    "US/Pacific"
    US_PACIFIC
    "US/Samoa"
    US_SAMOA
    "UTC"
    UTC
    "WET"
    WET
    "W-SU"
    W_SU
    "Zulu"
    ZULU
}

"An enumeration."
enum CourseColor {
    "Red"
    DANGER
    "Light Blue"
    INFO
    "Blue"
    PRIMARY
    "Gray"
    SECONDARY
    "Green"
    SUCCESS
    "Yellow"
    WARNING
}

"""

The `Date` scalar type represents a Date
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar Date

"""

The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

"""

The `GenericScalar` scalar type represents a generic
GraphQL scalar value that could be:
String, Boolean, Int, Float, List or Object.
"""
scalar GenericScalar

"""

The `Time` scalar type represents a Time value as
specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar Time

"""

Leverages the internal Python implmeentation of UUID (uuid.UUID) to provide native UUID objects
in fields, resolvers and input.
"""
scalar UUID

input AddCourseFileMutationInput {
    clientMutationId: String
    course: ID!
    file: String!
    id: ID
    title: String!
}

input AddCourseLinkMutationInput {
    clientMutationId: String
    course: ID!
    id: ID
    link: String!
    title: String!
}

input AddCourseMutationInput {
    clientMutationId: String
    "Color You Want This Class to Show Up as on Calendar and Schedule"
    color: String!
    id: ID
    "Name of Class (CHEM 161, POLS 110, etc.)"
    name: String!
    "Not Required"
    teacher: String
    "Full Name of Class (General Chemistry I, etc.)"
    title: String
    user: ID
}

input AddCourseTimeMutationInput {
    clientMutationId: String
    course: ID!
    endTime: Time!
    id: ID
    link: String
    "Leave Blank if Class is Online"
    location: String
    startTime: Time!
    user: ID
    "Hold CTRL or CMD to Select Multiple Days"
    weekday: String!
    zoomPassword: String
}

input AddEmailMutationInput {
    clientMutationId: String
    email: String!
}

input AddEventMutationInput {
    clientMutationId: String
    date: Date!
    description: String
    id: ID
    "Leave Blank if Event is All Day"
    time: Time
    title: String!
    user: ID!
}

input AddHomeworkAssignmentMutationInput {
    alert: String!
    clientMutationId: String
    course: ID!
    description: String
    dueDate: Date!
    dueTime: Time!
    id: ID
    link: String
    name: String!
    secondAlert: String!
}

input ChangePasswordMutationInput {
    clientMutationId: String
    oldpassword: String!
    password1: String!
    password2: String!
}

input ResetPasswordKeyMutationInput {
    clientMutationId: String
    password1: String!
    password2: String!
}

input ResetPasswordMutationInput {
    clientMutationId: String
    email: String!
}

input SetPasswordMutationInput {
    clientMutationId: String
    password1: String!
    password2: String!
}

input SignupMutationInput {
    clientMutationId: String
    email: String!
    firstName: String!
    lastName: String!
    password1: String!
    password2: String!
    username: String!
}
